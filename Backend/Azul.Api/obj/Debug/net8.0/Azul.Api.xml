<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azul.Api</name>
    </assembly>
    <members>
        <member name="P:Azul.Api.Controllers.ApiControllerBase.UserId">
            <summary>
            Returns the id (Guid) of the authenticated user / player.
            If no user is authenticated an empty guid is returned.
            </summary>
        </member>
        <member name="M:Azul.Api.Controllers.AuthenticationController.Register(Azul.Api.Models.Input.RegisterModel)">
            <summary>
            Registers a new user in the database.
            </summary>
        </member>
        <member name="M:Azul.Api.Controllers.AuthenticationController.CreateToken(Azul.Api.Models.Input.LoginModel)">
            <summary>
            Returns an object containing a (bearer) token that will be valid for 60 minutes.
            The token should be added in the Authorization header of each http request for which the user must be authenticated.
            The Id and NickName of the player are also included in the object.
            </summary>
            <example>Authorization bearer [token]</example>
        </member>
        <member name="T:Azul.Api.Controllers.GamesController">
            <summary>
            Provides game-play functionality.
            </summary>
        </member>
        <member name="M:Azul.Api.Controllers.GamesController.GetGame(System.Guid)">
            <summary>
            Gets information about a game
            </summary>
            <param name="id">Id (guid) of the game</param>
        </member>
        <member name="M:Azul.Api.Controllers.GamesController.TakeTiles(System.Guid,Azul.Api.Models.Input.TakeTilesModel)">
            <summary>
            Takes all the tiles of a type from a factory display or from the table center (which is a special kind of factory display).
            The tiles are taken by the player associated with the authenticated user.
            </summary>
            <param name="id">Id (guid) of the game</param>
            <param name="inputModel">Information about the move the player wants to make.</param>
        </member>
        <member name="M:Azul.Api.Controllers.GamesController.PlaceTilesOnPatternLine(System.Guid,Azul.Api.Models.Input.PlaceTilesModel)">
            <summary>
            Places the tiles the player has previously taken on a pattern line.
            </summary>
            <param name="id">Id (guid) of the game</param>
            <param name="inputModel">Information about the move the player wants to make.</param>
        </member>
        <member name="M:Azul.Api.Controllers.GamesController.PlaceTilesOnFloorLine(System.Guid)">
            <summary>
            Places the tiles the player has previously taken on the floor line.
            </summary>
            <param name="id">Id (guid) of the game</param>
        </member>
        <member name="M:Azul.Api.Controllers.TablesController.GetTableById(System.Guid)">
            <summary>
            Gets a specific table by its id.
            </summary>
        </member>
        <member name="M:Azul.Api.Controllers.TablesController.JoinOrCreate(Azul.Core.TableAggregate.TablePreferences)">
            <summary>
            Searches a table with available seats that matches the given preferences.
            If such a table is found, the user joins it.
            If no table is found, a new table is created and the user joins the new table.
            If the table has no available seats left, the game is started.
            </summary>
            <param name="preferences">
            Contains info about the type of game you want to play.
            </param>
            <remarks>Tables are automatically removed from the system after 15 minutes.</remarks>
        </member>
        <member name="M:Azul.Api.Controllers.TablesController.Leave(System.Guid)">
            <summary>
            Removes the user that is logged in from a table.
            If no players are left at the table, the table is removed from the system.
            </summary>
            <param name="id">
            The unique identifier of the table.
            </param>
        </member>
    </members>
</doc>
